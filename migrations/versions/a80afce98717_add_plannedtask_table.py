""""Add_PlannedTask_table"

Revision ID: a80afce98717
Revises: 
Create Date: 2025-07-12 23:19:31.148777

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a80afce98717'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('planned_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('priority', sa.String(length=10), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurring_type', sa.String(length=20), nullable=True),
    sa.Column('recurring_interval', sa.Integer(), nullable=True),
    sa.Column('recurring_days', sa.String(length=20), nullable=True),
    sa.Column('recurring_end_date', sa.Date(), nullable=True),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_task_id'], ['planned_tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('planned_tasks', schema=None) as batch_op:
        batch_op.create_index('idx_recurring', ['is_recurring', 'recurring_type'], unique=False)
        batch_op.create_index('idx_user_completed', ['user_id', 'completed'], unique=False)
        batch_op.create_index('idx_user_date', ['user_id', 'date'], unique=False)
        batch_op.create_index('idx_user_priority', ['user_id', 'priority'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('planned_tasks', schema=None) as batch_op:
        batch_op.drop_index('idx_user_priority')
        batch_op.drop_index('idx_user_date')
        batch_op.drop_index('idx_user_completed')
        batch_op.drop_index('idx_recurring')

    op.drop_table('planned_tasks')
    # ### end Alembic commands ###
